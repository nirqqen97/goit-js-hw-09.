{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAC,KAAO,CACLC,QAASC,SAASC,cAAc,UAElCH,KAAKC,QAAQG,iBAAiB,UAM9B,SAAuBC,GACrBA,EAAEC,iBACF,MACEC,UAAWC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,IACtBN,EAAEO,cACNC,EAAWC,OAAOL,EAAMM,OACxBC,EAAUF,OAAOJ,EAAKK,OACtBE,EAAYH,OAAOH,EAAOI,OAE5B,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAWC,IAEwBC,EAAvCD,EAAGL,GAAUO,MAAK,EAACC,SAAEA,EAAQb,MAAEA,MAC3Cc,QAAQC,IAAI,uBAAqBF,QAAiBb,OAClDV,EAAA0B,OAAOC,QAAQ,uBAAqBJ,QAAiBb,MAAU,IAEhEkB,OAAM,EAACL,SAAEA,EAAQb,MAAEA,MAClBc,QAAQC,IAAI,sBAAoBF,QAAiBb,OACjDV,EAAA0B,OAAOG,QAAQ,sBAAoBN,QAAeb,MAAU,IAG9DK,GAAYG,EAGdX,EAAEO,cAAcgB,O,IA3BhB,IAAIf,EAAW,KACXG,EAAU,KACVC,EAAY,KA6BhB,SAASE,EAAcE,EAAUb,GAC/B,OAAO,IAAIqB,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACT,E,MAASb,IAElBuB,EAAO,C,SAACV,E,MAASb,GAAO,GAEzBA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nrefs = {\n  formRef: document.querySelector('.form')\n}\nrefs.formRef.addEventListener('submit',onHandleClick);\n\nlet delayVal = null;\nlet stepVal = null;\nlet amountVal = null;\n\nfunction onHandleClick(e) {\n  e.preventDefault();\n  const{\n    elements: {delay, step, amount},\n  } = e.currentTarget\n  delayVal = Number(delay.value);\n  stepVal = Number(step.value);\n  amountVal = Number(amount.value);\n  \nfor (let i = 0; i < amountVal; i++) {\n  // ----------тут должен быть создание промисов наверное уже завтра закончу\n  createPromise(i, delayVal).then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\n  });\n  delayVal += stepVal;\n\n}\ne.currentTarget.reset()\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject)=>{\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position,delay})\n      } else {\n        reject({position,delay})\n      }\n    }, delay);\n  })\n\n\n}\n"],"names":["$iQIUW","parcelRequire","refs","formRef","document","querySelector","addEventListener","e","preventDefault","elements","delay","delay1","step","amount","currentTarget","$47d4ff9957288465$var$delayVal","Number","value","$47d4ff9957288465$var$stepVal","$47d4ff9957288465$var$amountVal","i","$47d4ff9957288465$var$createPromise","then","position","console","log","Notify","success","catch","failure","reset","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.12f73e85.js.map"}